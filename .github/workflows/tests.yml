name: Tests

on:
  push:
    branches:
      - ci/setup-python-workaround

concurrency: 
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true
jobs:
  tests-linux:
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7"]
    
    env:
      AUSTIN_TESTS_PYTHON_VERSIONS: ${{ matrix.python-version }}
    
    name: Tests on Linux with Python ${{ matrix.python-version }}
    steps:
      - uses: actions/checkout@v2

      - name: Install build dependencies
        run: |
          sudo apt-get -y install libunwind-dev binutils-dev libiberty-dev

      - name: Install test dependencies
        run: |
          sudo apt-get -y install \
            valgrind \
            gdb

      # See (https://github.com/actions/setup-python/issues/442#issuecomment-1167837162)
      - name: Temprorary setup-python workaround
        if: ${{ false }}
        run: |
          curl -LO http://archive.ubuntu.com/ubuntu/pool/main/libf/libffi/libffi6_3.2.1-8_amd64.deb
          curl -LO http://archive.ubuntu.com/ubuntu/pool/main/libf/libffi/libffi7_3.3-4_amd64.deb
          sudo dpkg -i libffi6_3.2.1-8_amd64.deb
          sudo ln -sf libffi.so.6.0.4 /usr/lib/x86_64-linux-gnu/libffi.so
          sudo dpkg -i libffi7_3.3-4_amd64.deb
          sudo ln -sf libffi.so.7.1.0 /lib/x86_64-linux-gnu/libffi.so.7
          sudo ldconfig -p
          sudo ldconfig -p > /tmp/1
          sudo ldconfig
          sudo ldconfig -p
          sudo ldconfig -p > /tmp/2
          diff /tmp/1 /tmp/2 || true

#      - name: Install Python
#        uses: actions/setup-python@v4
#        with:
#          python-version: ${{ matrix.python-version }}

      - name: Install Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Compile Austin
        run: |
          autoreconf --install
          ./configure --enable-debug-symbols true
          make

      - name: Run repro
        run: |
          ls -la .venv/bin/python
          ls -la `which python3.10`
          .venv/bin/python repro.py
          python3.10 repro.py

      - name: Run tests
        run: |
          ulimit -c unlimited
          python3.10 -m venv .venv
          source .venv/bin/activate
          pip install --upgrade pip
          pip install -r test/requirements.txt
          sudo -E .venv/bin/pytest --pastebin=failed --no-flaky-report -sr a
          .venv/bin/pytest --pastebin=failed --no-flaky-report -sr a
          deactivate

