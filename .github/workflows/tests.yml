name: Tests

on:
  push:
    branches:
      - ci/setup-python-workaround

jobs:
  tests-deadsnakes-env:
    runs-on: ubuntu-latest
    if: ${{ false }}
    name: Tests on Linux with Python 3.10 from deadsnakes env
    steps:
      - uses: actions/checkout@v2

      - name: Install Python 3.10 from repo
        run: |
          sudo apt update && sudo apt upgrade
          sudo apt install software-properties-common -y
          sudo add-apt-repository ppa:deadsnakes/ppa -y
          sudo apt update
          sudo apt install python3.10 -y
          sudo ln -s -f python3.10 /usr/bin/python3
          python3.10 --version
          python3 --version
          python --version

      - name: Repros
        run: |
          curl -sS https://bootstrap.pypa.io/get-pip.py | python3.10
          export PATH="~/.local/bin:$PATH"

          ulimit -c unlimited
          python3.10 -m venv --without-pip .venv
          source .venv/bin/activate
          pip install --upgrade pip
          .venv/bin/python3 repro.py

  tests-deadsnakes:
    runs-on: ubuntu-latest
    if: ${{ false }}
    name: Tests on Linux with Python 3.10 from deadsnakes
    steps:
      - uses: actions/checkout@v2

      - name: Install Python 3.10 from repo
        run: |
          sudo apt update && sudo apt upgrade
          sudo apt install software-properties-common -y
          sudo add-apt-repository ppa:deadsnakes/ppa -y
          sudo apt update
          sudo apt install python3.10 strace -y
          sudo ln -s -f python3.10 /usr/bin/python3
          ls -la `which python`
          ls -la `which python3`
          python3.10 --version
          python3 --version
          python --version

      - name: Repros
        run: |
          ulimit -c unlimited
          strace python3 repro.py

  tests-toolcache-env:
    runs-on: ubuntu-latest
    if: ${{ false }}
    name: Tests on Linux with Python 3.10 from toolcache with env
    steps:
      - uses: actions/checkout@v2

      - name: Install Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Repros
        run: |
          ulimit -c unlimited
          python3.10 -m venv --without-pip .venv
          source .venv/bin/activate
          pip install --upgrade pip
          .venv/bin/python3 repro.py

  tests-toolcach:
    if: ${{ false }}
    runs-on: ubuntu-latest
    name: Tests on Linux with Python 3.10 from toolcache
    steps:
      - uses: actions/checkout@v2

      - name: Install Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Repros
        run: |
          set +e
          sudo apt-get update
          sudo apt-get install systemd-coredump strace valgrind gdb -y
          ulimit -c unlimited
          python --version
          python3 repro.py
          sleep 10
          dump=`ls /var/lib/systemd/coredump/core.python*`
          echo "dump=$dump"
          coredumpctl gdb -1

  tests-native:
    if: ${{ false }}
    runs-on: ubuntu-latest
    name: Tests on Linux with native python
    steps:
      - uses: actions/checkout@v2

      - name: Repros
        run: |
          set +e
          uname -a
          lsb_release -a
          ls -l `which python3`
          python3 --version
          python3 repro.py

  tests-native-2204:
    if: ${{ false }}
    runs-on: ubuntu-22.04
    name: Tests on Linux with native python on 22.04
    steps:
      - uses: actions/checkout@v2

      - name: Repros
        run: |
          set +e
          uname -a
          lsb_release -a
          ls -l `which python3`
          python3 --version
          python3 repro.py

  tests-originl:
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7"]
    
    env:
      AUSTIN_TESTS_PYTHON_VERSIONS: ${{ matrix.python-version }}
    
    name: Tests on Linux with Python ${{ matrix.python-version }}
    steps:
      - uses: actions/checkout@v2

      - name: Install build dependencies
        run: |
          sudo apt-get -y install libunwind-dev binutils-dev libiberty-dev
      - name: Install test dependencies
        run: |
          sudo apt-get -y install \
            valgrind \
            gdb

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Compile Austin
        run: |
          autoreconf --install
          ./configure --enable-debug-symbols true
          make
      - name: Run tests
        run: |
          ulimit -c unlimited
          python3.10 -m venv .venv
          source .venv/bin/activate
          pip install --upgrade pip
          pip install -r test/requirements.txt
          # sudo -E .venv/bin/pytest --pastebin=failed --no-flaky-report -sr a
          # .venv/bin/pytest --pastebin=failed --no-flaky-report -sr a
          python3.10 repro.py 
          deactivate
